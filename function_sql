-- --ERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP BY clause and 
-- contains nonaggregated column 'DATABASE.TABLE.COLUMN' which is not functionally dependent on
-- columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
-- 위 에러 떄문에 Group by 규칙 5.7.4 이전으로 세팅함
-- 사용한 코드: SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));



-- product_summary

SELECT 
keyword.name as keyword,
products.title as title,
products.is_discounted as is_discounted,
products.discount_percent as discount_percent,
products.discounted_price as discounted_price,
products.main_image as image,
gender.name as gender
FROM
products
LEFT JOIN keyword ON products.keyword_id = keyword.id 
LEFT JOIN gender ON products.gender_id = gender.id


-- product_detail 

SELECT 
keyword.name as keyword,
products.title as title,
product_code as product_code,
products.is_discounted as is_discounted,
products.discount_percent as discount_percent,
products.discounted_price as discounted_price,
products.main_image as main_image,
products.sub_image as sub_image,
information.contents as contents,
information.material as material,
information.sizes as sizes,
information.manufacturer as manufacturer,
information.country_of_manufacture as country_of_manufacture,
information.caution as caution,
information.guarantee as guarantee,
information.service_information as service_information,
gender.name as gender,
subcategory.name as subcategory_items,
JSON_ARRAYAGG(images.source) as images
FROM
products 
LEFT JOIN keyword ON products.keyword_id = keyword.id 
LEFT JOIN information ON products.id = information.product_id 
LEFT JOIN gender ON products.gender_id = gender.id
LEFT JOIN subcategory ON products.subcategory_id = subcategory.id
LEFT JOIN images ON products.id = images.product_id
GROUP BY products.id

--product_size
SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));

select 
* from 
(SELECT 
products.id as id,
size.name as size
FROM
products 
LEFT JOIN product_size ON products.id = product_size.product_id 
LEFT JOIN size ON product_size.size_id = size.id ) as sizes_pro
where id = 1




--상품 이미지만 분리하면
SELECT 
JSON_ARRAYAGG(JSON_OBJECT ("id", id, "url", images.source)) as images
FROM
products 
LEFT JOIN images ON products.id = images.product_id
WHERE products.id = ${}


--검색 베이스

SELECT 
keyword.name as keyword,
products.title as title,
product_code as product_code,
information.contents as contents,
information.material as material,
gender.name as gender,
category.name as category_items,
subcategory.name as subcategory_items
FROM
products 
LEFT JOIN keyword ON products.keyword_id = keyword.id 
LEFT JOIN information ON products.id = information.product_id 
LEFT JOIN gender ON products.gender_id = gender.id
LEFT JOIN category ON products.category_id = category.id
LEFT JOIN subcategory ON products.subcategory_id = subcategory.id
GROUP BY products.id


--검색어 사용하여 검색 (여러 column에서 검색하여 Union)
SELECT id, title, category_id FROM products WHERE products.title REGEXP ${text}
UNION
SELECT id, title, category_id FROM products WHERE products.category REGEXP ${text}


-- 검색 베이스 뷰  만들기
SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
CREATE VIEW search_base AS
(SELECT 
k.name as keyword,
p.title as title,
p.product_code as product_code,
i.contents as contents,
i.material as material,
g.name as gender,
c.name as category_items,
s.name as subcategory_items
FROM
products AS p
LEFT JOIN keyword AS k ON p.keyword_id = k.id 
LEFT JOIN information AS i ON p.id = i.product_id 
LEFT JOIN gender AS g ON p.gender_id = g.id
LEFT JOIN category AS c ON p.category_id = c.id
LEFT JOIN subcategory AS s ON p.subcategory_id = s.id
GROUP BY p.id, p.title
)

